TASK 3DUE: March 2, 11:59 PM – 25 Points If late– 15 PointsPart 1 Write a program where a child is created to execute command that tells you the date and time in Unix. Use execl(...). Note, you need to specify the full path of the file name that gives you date and time information. Announce the successful forking of child process by displaying its PID.Part 2 Write a program where a child is created to execute a command that shows all files (including hid- den files) in a directory with information such as permissions, owner, size, and when last modified. Use execvp(...). I suggest that you list /usr/bin or something in /etc so I can easily run your code without modifying it.For the command to list directory contents with various options, refer the handout on Unix file system sent to you in the first class. Which version of ls shows hidden files? Announce the successful forking of child process by displaying its PID.Part 3[Step 1] Prcs_P1.c: Create two files namely, destinationl.txt and destination2.txt with read, write, and execute permissions.[Step 2] Prcs_P2.c: Copy the contents of source.txt1 into destinationl.txt and destination2.txt as per the following procedure.1. Read the next 100 characters from source.txt, and among characters read, replace each char- acter ’1’ with character ’A’ and all characters are then written in destinationl.txt2. Then the next 50 characters are read from source.txt, and among characters read, replace each character ’2’ with character ’B’ and all characters are then written in destination2.txt.3. The previous steps are repeated until the end of file source.txt. The last read may not have 100 or 50 characters.Once you’re done with successful creation of executables for the above two steps do the following. Write a C program and call it Parent_Prcs.c. Execute the files as per the following procedure usingexecv system call. Use sleep system calls to introduce delays.    [Step 3] Fork a child process, say Child l and execute Prcs_Pl. This will create two destination files according to Step 1.    [Step 4] After Child l finishes its execution, fork another child process, say Child 2 and execute Prcs_P2 that accomplishes the procedure described in Step 2.Submission Instructions:Save your responses to part 1, 2, and 32 in a single folder and zip as: task3_lastname.zip. Make sure your program compile and run without any errors. Email your zip file with the subject line, "Task 3 - CSc 332G - lastname". (I modified this slightly because parens in your filenename cause me a little problem. )